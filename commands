1) Destroy specific resource command --------> terraform destroy -target resourcename.usergivenresourcename 

2) install provider plugin -------> terraform init

3) view the plan -------> terraform plan

4) create infra -----> terraform apply

5) comments part in terraform code ----> /*     comments go here */

6) to see state file and view -----> terraform show

7) use varibale explicit ------> terraform plan -var="instacetype=t2.micro"

8) varibles.tf -----> to mention  all variable in a file 

9) terraform.tfvars---> store all common variables used in variables.tf

10) set veriable in window and linxu to use default values --->  
                
                setx TF_VAR_variablename
                 
                setx TF_VAR_instancetype t2.micro
                
                
11) print the set variable -------> 
  
            echp %TF_VAR_instancetype%
            
   output ----> t2.micro


12) varible "varibalename" 
{
type = string
}

13) varibale type : List,string, Map {name="viraj", cell=122445646}

14) ${count.index}----> 0,1,2.....

15) conditional expression syntax -----> condition ? true_val : false_val

     example : variable "istest"{}
     
 16) local declaration in Terraform script 
 
   example: 
   
   locals {
      common_tags = {
      owner = "devops team"
      } 
   }
     
   resource "aws_insatnce" "virajec2"
 
 {
 ami=i-12234
 tags=local.common_tags
 }
 
17) setting up log 

export TF_LOG (TRACE is default once its set)

18) save the log in path linux box 

export TF_LOG=/tmp/terraform-log

19) terraform formatting command-----> terraform fmt

20) terraform syntax check ----> terraform validate (unsupported argument will thrown an error)

21) ~ means update in TF Files

22) terraform output extract the values ---> terraform output resourcename

      splat expression [*] will be used 
      
23) save the terraforn plan ------> terraform plan -out=virajdemo

24) visual represantation ----------> terraform graph (DOT format)

25) taint will destroy the resource and re create it again --> terraform taint

26) dynamic block will be creating for repetative values

  for_each keyword
